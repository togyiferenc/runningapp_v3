package com.example.runningapp;

import com.example.runningapp.model.Race;
import com.example.runningapp.model.Result;
import com.example.runningapp.model.Runner;
import com.example.runningapp.repository.RaceRepository;
import com.example.runningapp.repository.ResultRepository;
import com.example.runningapp.repository.RunnerRepository;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;

import static org.hamcrest.Matchers.hasSize;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

@SpringBootTest
@AutoConfigureMockMvc
public class ResultControllerTest {

    @Autowired
    private MockMvc mockMvc;

    @Autowired
    private RunnerRepository runnerRepository;

    @Autowired
    private RaceRepository raceRepository;

    @Autowired
    private ResultRepository resultRepository;

    @BeforeEach
    public void setUp() {
        resultRepository.deleteAll();
        runnerRepository.deleteAll();
        raceRepository.deleteAll();

        Runner runner = new Runner("Nagy Anna", 30, "n≈ë");
        Race race = new Race("Spar BP Maraton", 42);

        runnerRepository.save(runner);
        raceRepository.save(race);

        Result result = new Result(runner, race, 240);
        resultRepository.save(result);
    }

    @Test
    public void testGetAllResults() throws Exception {
        mockMvc.perform(get("/results"))
                .andExpect(status().isOk())
                .andExpect(content().contentType(MediaType.APPLICATION_JSON))
                .andExpect(jsonPath("$", hasSize(1)))
                .andExpect(jsonPath("$[0].time").value(240));
    }
}
